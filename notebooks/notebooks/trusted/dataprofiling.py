# -*- coding: utf-8 -*-
"""DataProfiling.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1uJQBQoxq5LosVQZdxysnkHchfzXFuyw5
"""

from google.colab import drive 
drive.mount('/content/gdrive')

#Setting libraries required for the notebook
import pandas as pd
import numpy as np
from sqlalchemy import create_engine

#Retrieving input dataset

postgres_str = ('postgresql://postgres:OaklandStreet@localhost:5432/TrustedZone')
cnx = create_engine(postgres_str)
df = pd.read_sql('SELECT * FROM usageData', cnx)
df.shape

"""To achieve the objective of prediction of the commercial appraisal of the land properties in Bogot√°, there has been configured two datasets: catastral database and stratum database. The stratum database counts with information of Land property ID and the corresponding stratum.  The cadastral datatabase counts with the following variables:

* Land property ID
* *zoneCode*: Corresponding to the ID block where the property is located
* *locationCode*, corresponding to the code division areas for management and planning of the city
* *totalArea*, as the area in squared meters of the lot where the property is located
* *builtArea*, as the net built area of the property
* *price*, the price of the property

Each of the variables, not identifiers, incorporated in the related with the price of the properties for the business:

***Relevant insights per variable***

To prepare the data analysis and prediction and to monitoring the behaviour of the growth of the city, related with it is properties, some insights can be obtained from the initial variables:

*locationCode*

Distribution of properties per location:
"""

LC = df.locationCode.value_counts().sort_values(axis=0, ascending=True)
LC.plot.bar(figsize=(14,3), title='Properties per Location', grid=True)

"""*Property lot area*

Distribution of the property lot area:
"""

df['totalArea'].plot.box()
#df['totalArea'].plot.hist(bins=500)

"""*builtArea*

Property built area per location:
"""

df.plot.hexbin(x='builtArea',y='locationCode',gridsize=8,cmap='Oranges')
#df['builtArea'].plot.box()

df['price'].plot.density()

"""*Stratum*

Number of properties per stratum:
"""

Stratum = df.stratumCode.value_counts()
Stratum.plot.pie(y='stratumCode')