# -*- coding: utf-8 -*-
"""OutlierDetection.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Ov5TJRXSuNRO-KHk1x9kuzryaOueFyDI
"""

from google.colab import drive 
drive.mount('/content/gdrive')

#Setting libraries required for the notebook
import pandas as pd
import numpy as np
from scipy import stats
from sqlalchemy import create_engine

#Retrieving input dataset

postgres_str = ('postgresql://postgres:OaklandStreet@localhost:5432/TrustedZone')
cnx = create_engine(postgres_str)
df = pd.read_sql('SELECT * FROM usageData', cnx)
df.shape

"""For outlier detection, it is taken into account the criteria of values with more than three standard deviations from the mean. For this calculation is used the library scipy, through the method Z-Score to obtain the Z-score of each value in each column.

** Outliers for totalArea **
"""

oTA = df[(np.abs(stats.zscore(df['totalArea'])) < 3)]
oTA.head(10)

oTA.shape

oBA = df[(np.abs(stats.zscore(df['builtArea'])) < 3)]
oBA.head(10)

oBA.shape

oPrice = df[(np.abs(stats.zscore(df['price'])) < 3)]
oPrice.head(10)

oPrice.shape

"""Removing outliers in all the columns from the data frame:"""

df2 = df[(np.abs(stats.zscore(df)) < 3).all(axis=1)]
df2.shape()

postgres_str = ('postgresql://postgres:OaklandStreet@localhost:5432/TrustedZone')
cnx = create_engine(postgres_str)
df.to_sql('usageData', cnx, if_exists='replace')
cnx